# FROM openknowledge/ckan-dev:2.8
FROM alphagov/ckan-dev:2.7

MAINTAINER Your Name Here <you@example.com>

# Install any extensions needed by your CKAN instance
# (Make sure to add the plugins to CKAN__PLUGINS in the .env file)

RUN which python && \
    pip install --upgrade setuptools && \
    # install numpy outside of requirements.txt as was complaining of python 3.5 requirement
    pip install numpy==1.16.4 && \
    pip install -e git+https://github.com/alphagov/ckanext-dcat.git@6253f296c6d1200465a3223710d076cd24e37834#egg=ckanext-dcat && \
    pip install -r https://raw.githubusercontent.com/alphagov/ckanext-dcat/6253f296c6d1200465a3223710d076cd24e37834/requirements.txt && \
    pip install -e git+https://github.com/alphagov/ckanext-harvest.git@0ba5e11cc89c1560ab724bac42f84180bcfab019#egg=ckanext-harvest && \
    pip install -r https://raw.githubusercontent.com/alphagov/ckanext-harvest/0ba5e11cc89c1560ab724bac42f84180bcfab019/pip-requirements.txt && \
    pip install -e git+https://github.com/alphagov/ckanext-spatial.git@b86a7189577285169b0cb5ed93f145387debeec6#egg=ckanext-spatial && \
    pip install -r https://raw.githubusercontent.com/alphagov/ckanext-spatial/b86a7189577285169b0cb5ed93f145387debeec6/pip-requirements.txt && \
    pip install -e git+https://github.com/alphagov/ckanext-s3-resources.git@81eb36fb51da5e216e9405a7ad64c4096881ca85#egg=ckanext-s3-resources && \
    pip install -r https://raw.githubusercontent.com/alphagov/ckanext-s3-resources/81eb36fb51da5e216e9405a7ad64c4096881ca85/requirements.txt && \
    pip install -e git://github.com/alphagov/ckanext-datagovuk.git@release_122#egg=ckanext-datagovuk && \
    pip install -r https://raw.githubusercontent.com/alphagov/ckanext-datagovuk/release_155/requirements.txt

# Clone the extension(s) your are writing for your own project in the `src` folder
# to get them mounted in this image at runtime

COPY docker-entrypoint.d/* /docker-entrypoint.d/

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
# See https://github.com/okfn/docker-ckan#applying-patches
COPY patches ${APP_DIR}/patches

RUN for d in $APP_DIR/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done
